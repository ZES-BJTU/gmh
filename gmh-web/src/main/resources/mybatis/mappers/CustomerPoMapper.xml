<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zes.squad.gmh.mapper.CustomerMapper">
	<resultMap id="BaseResultMap" type="com.zes.squad.gmh.entity.po.CustomerPo">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="gender" jdbcType="TINYINT" property="gender" />
		<result column="mobile" jdbcType="VARCHAR" property="mobile" />
		<result column="birthday" jdbcType="DATE" property="birthday" />
		<result column="input_time" jdbcType="TIMESTAMP" property="inputTime" />
		<result column="source" jdbcType="VARCHAR" property="source" />
		<result column="store_id" jdbcType="BIGINT" property="storeId" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
		<result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
	</resultMap>
	<insert id="insert" parameterType="com.zes.squad.gmh.entity.po.CustomerPo" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO customer
		(`name`,`gender`,`mobile`,`birthday`,`source`,`store_id`,`remark`)
		VALUES
		(#{name, jdbcType=VARCHAR},
		#{gender, jdbcType=INTEGER},
		#{mobile, jdbcType=VARCHAR},
		#{birthday, jdbcType=DATE},
		#{source,jdbcType=VARCHAR},
		#{storeId, jdbcType=BIGINT},
		#{remark,
		jdbcType=VARCHAR})
	</insert>
	<update id="update" parameterType="com.zes.squad.gmh.entity.po.CustomerPo">
		update customer
		<set>
			<if test="name != null and name != ''">
				`name`=#{name, jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				`gender`=#{gender, jdbcType=TINYINT},
			</if>
			<if test="mobile != null and mobile != ''">
				`mobile`=#{mobile, jdbcType=VARCHAR},
			</if>
			<if test="birthday !=null">
				`birthday` = #{birthday,jdbcType=DATE},
			</if>
			<if test="source != null">
				`source`= #{source,jdbcType=INTEGER},
			</if>
			<if test="storeId != null">
				`store_id`= #{storeId,jdbcType=INTEGER},
			</if>
			<if test="remark != null and remark != ''">
				`remark`= #{remark,jdbcType=VARCHAR}
			</if>
		</set>
		where
		`id`= #{id,jdbcType=INTEGER}
	</update>
	<delete id="delete" parameterType="long">
		delete from customer
		where
		`id` = #{id,jdbcType=INTEGER}
	</delete>
	<select id="selectByCondition"
		parameterType="com.zes.squad.gmh.entity.condition.CustomerQueryCondition"
		resultMap="BaseResultMap">
		SELECT
		*
		from
		customer
		<where>
			<if test="storeId != null">
				`store_id` = #{storeId, jdbcType=BIGINT}
			</if>
			<if test="gender != null ">
				AND `gender` = #{gender, jdbcType=TINYINT}
			</if>
			<if test="keyWords != null and keyWords != ''">
				<bind name="condition" value="'%' + keyWords + '%'" />
				CONCAT(`name`,`mobile`,`remark`,`source`) LIKE #{condition, jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	<select id="getById" parameterType="long" resultMap="BaseResultMap">
		select * from customer
		where
		id=#{id,jdbcType=INTEGER}
	</select>
	<select id="getByMobile" parameterType="string" resultMap="BaseResultMap">
		select * from customer
		where
		mobile=#{mobile,jdbcType=VARCHAR}
	</select>
</mapper>