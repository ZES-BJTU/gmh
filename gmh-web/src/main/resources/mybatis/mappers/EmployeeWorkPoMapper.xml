<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zes.squad.gmh.mapper.EmployeeWorkMapper">
	<resultMap id="BaseResultMap" type="com.zes.squad.gmh.entity.po.EmployeeWorkPo">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="employee_id" jdbcType="BIGINT" property="employeeId" />
		<result column="top_type" jdbcType="INTEGER" property="topType" />
		<result column="work_type" jdbcType="INTEGER" property="workType" />
		<result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
		<result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
	</resultMap>
	<insert id="batchInsert" parameterType="com.zes.squad.gmh.entity.po.EmployeeWorkPo">
		INSERT INTO employee_work
		(`employee_id`, `top_type`, `work_type`)
		VALUES
		<foreach collection="list" item="po" separator=",">
			(#{po.employeeId, jdbcType=BIGINT},
			#{po.topType, jdbcType=INTEGER},
			#{po.workType, jdbcType=INTEGER})
		</foreach>
	</insert>
	<delete id="batchDelete" parameterType="long">
		DELETE FROM employee_work
		WHERE `employee_id` = #{employeeId, jdbcType=BIGINT}
	</delete>
	<select id="selectEmployeeIdsByCondition"
		parameterType="com.zes.squad.gmh.entity.condition.EmployeeWorkQueryCondition"
		resultType="list">
		SELECT
		ew.`employee_id`
		FROM employee_work ew
		LEFT JOIN
		employee e
		ON
		ew.`employee_id` = e.`id`
		<where>
			<if test="storeId != null">
				e.`store_id` = #{storeId, jdbcType=BIGINT}
			</if>
			<if test="startEntryTime != null and endEntryTime == null">
				AND e.`entry_time` <![CDATA[>]]> #{startEntryTime, jdbcType=TIMESTAMP}
			</if>
			<if test="startEntryTime == null and endEntryTime != null">
				AND e.`entry_time` <![CDATA[<]]> #{endEntryTime, jdbcType=TIMESTAMP}
			</if>
			<if test="startEntryTime != null and endEntryTime != null">
				AND (e.`entry_time` BETWEEN #{startEntryTime, jdbcType=TIMESTAMP} AND #{endEntryTime, jdbcType=TIMESTAMP})
			</if>
			<if test="working != null">
				AND e.`is_working` = #{working, jdbcType=TINYINT}
			</if>
			<if test="topType != null">
				AND ewt.`top_type` = #{topType, jdbcType=INTEGER}
			</if>
			<if test="workType != null">
				AND ewt.`work_type` = #{workType, jdbcType=INTEGER}
			</if>
			<if test="search != null and search != ''">
				<bind name="condition" value="'%' + search + '%'" />
				CONCAT(e.`name`,e.`mobile`,e.`remark`,ewt.`name`) LIKE #{condition, jdbcType=VARCHAR}
			</if>
		</where>
	</select>
</mapper>