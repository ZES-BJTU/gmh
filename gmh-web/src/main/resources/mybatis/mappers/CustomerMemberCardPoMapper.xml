<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zes.squad.gmh.mapper.CustomerMemberCardMapper">
	<resultMap id="BaseResultMap"
		type="com.zes.squad.gmh.entity.po.CustomerMemberCardPo">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="customer_id" jdbcType="BIGINT" property="customerId" />
		<result column="member_card_id" jdbcType="BIGINT" property="memberCardId" />
		<result column="remaining_money" jdbcType="DECIMAL" property="remainingMoney" />
		<result column="is_valid" jdbcType="TINYINT" property="isValid" />
		<result column="is_returned" jdbcType="TINYINT" property="isReturned" />
		<result column="returned_reason" jdbcType="VARCHAR" property="returnedReason" />
		<result column="returned_time" jdbcType="TIMESTAMP" property="returnedTime" />
		<result column="returned_money" jdbcType="DECIMAL" property="returnedMoney" />
		<result column="project_discount" jdbcType="DECIMAL" property="projectDiscount" />
		<result column="product_discount" jdbcType="DECIMAL" property="productDiscount" />
		<result column="returned_reason" jdbcType="VARCHAR" property="returnedReason" />
		<result column="is_turned" jdbcType="TINYINT" property="isTurned" />
		<result column="turned_reason" jdbcType="VARCHAR" property="turnedReason" />
		<result column="turned_time" jdbcType="TIMESTAMP" property="turnedTime" />
		<result column="turned_money" jdbcType="DECIMAL" property="turnedMoney" />
		<result column="unique_identifier" jdbcType="VARCHAR" property="uniqueIdentifier" />
		<result column="store_id" jdbcType="BIGINT" property="storeId" />
		<result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
		<result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
	</resultMap>
	<resultMap type="com.zes.squad.gmh.entity.union.CustomerMemberCardUnion"
		id="union">
		<result column="customer_name" jdbcType="VARCHAR" property="customerName" />
		<result column="member_card_name" jdbcType="VARCHAR" property="memberCardName" />
		<result column="remaining_money" jdbcType="DECIMAL" property="remainingMoney" />
		<result column="is_valid" jdbcType="TINYINT" property="isValid" />
		<result column="is_returned" jdbcType="TINYINT" property="isReturned" />
		<result column="project_discount" jdbcType="DECIMAL" property="projectDiscount" />
		<result column="product_discount" jdbcType="DECIMAL" property="productDiscount" />
		<result column="returned_reason" jdbcType="VARCHAR" property="returnedReason" />
		<result column="returned_time" jdbcType="TIMESTAMP" property="returnedTime" />
		<result column="returned_money" jdbcType="DECIMAL" property="returnedMoney" />
		<result column="returned_reason" jdbcType="VARCHAR" property="returnedReason" />
		<result column="is_turned" jdbcType="TINYINT" property="isTurned" />
		<result column="turned_reason" jdbcType="VARCHAR" property="turnedReason" />
		<result column="turned_time" jdbcType="TIMESTAMP" property="turnedTime" />
		<result column="turned_money" jdbcType="DECIMAL" property="turnedMoney" />
		<result column="unique_identifier" jdbcType="VARCHAR" property="uniqueIdentifier" />
	</resultMap>
	<insert id="insert" parameterType="com.zes.squad.gmh.entity.po.CustomerMemberCardPo" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
		customer_member_card
		(`customer_id`,`member_card_id`,`remaining_money`,`project_discount`,`product_discount`,`is_valid`,`is_returned`,`is_turned`,`unique_identifier`,`store_id`)
		VALUES
		(#{customerId, jdbcType=BIGINT},
		#{memberCardId,
		jdbcType=BIGINT},
		#{remainingMoney, jdbcType=DECIMAL},
		#{projectDiscount, jdbcType=DECIMAL},
		#{productDiscount, jdbcType=DECIMAL},
		#{isValid, jdbcType=INTEGER},
		#{isReturned, jdbcType=INTEGER},
		#{isTurned, jdbcType=INTEGER},
		#{uniqueIdentifier, jdbcType=VARCHAR},
		#{storeId, jdbcType=BIGINT})
	</insert>
	<select id="listCustomerMemberCardByCondition"
		parameterType="com.zes.squad.gmh.entity.condition.CustomerMemberCardQueryCondition"
		resultMap="union">
		select
		cmd.`id` as `id`,
		cus.`name` as `customer_name`,
		c.`name` as `member_card_name`,
		cmd.`remaining_money` as `remaining_money`,
		cmd.`is_valid` as
		`is_valid`,
		cmd.`project_discount` as `project_discount`,
		cmd.`product_discount` as `product_discount`,
		cmd.`is_returned` as `is_returned`,
		cmd.`returned_reason` as
		`returned_reason`,
		cmd.`returned_time` as `returned_time`,
		cmd.`returned_money` as `returned_money`,
		cmd.`is_turned` as
		`is_turned`,
		cmd.`turned_reason` as `turned_reason`,
		cmd.`turned_time`
		as `turned_time`,
		cmd.`turned_money` as `turned_money`,
		cmd.`unique_identifier` as `unique_identifier`
		from
		customer_member_card cmd
		left join customer cus on
		cus.`id`=cmd.`customer_id`
		left join member_card c on
		cmd.`member_card_id`=c.`id`
		<where>
			<if test="storeId != null">
				cmd.`store_id` = #{storeId, jdbcType=BIGINT}
			</if>
			<if test="keyWords != null and keyWords != ''">
				<bind name="condition" value="'%' + keyWords + '%'" />
				`customer_name` LIKE #{condition, jdbcType=VARCHAR}
			</if>
		</where>
		
	</select>
	
	<select id="getCardListByCustomerId"
		parameterType="map"
		resultMap="union">
		select
		cmd.`id` as `id`,
		cus.`name` as `customer_name`,
		c.`name` as `member_card_name`,
		cmd.`remaining_money` as `remaining_money`,
		cmd.`is_valid` as
		`is_valid`,
		cmd.`project_discount` as `project_discount`,
		cmd.`product_discount` as `product_discount`,
		cmd.`is_returned` as `is_returned`,
		cmd.`returned_reason` as
		`returned_reason`,
		cmd.`returned_time` as `returned_time`,
		cmd.`returned_money` as `returned_money`,
		cmd.`is_turned` as
		`is_turned`,
		cmd.`turned_reason` as `turned_reason`,
		cmd.`turned_time`
		as `turned_time`,
		cmd.`turned_money` as `turned_money`,
		cmd.`unique_identifier` as `unique_identifier`
		from
		customer_member_card cmd
		left join customer cus on
		cus.`id`=cmd.`customer_id`
		left join member_card c on
		cmd.`member_card_id`=c.`id`
		where
		cmd.`store_id`=#{storeId,jdbcType=BIGINT}
		and
		cmd.`customer_id`=#{customerId,jdbcType=BIGINT}
		
	</select>
	
	<select id="changedListCustomerMemberCardByCondition"
		parameterType="com.zes.squad.gmh.entity.condition.CustomerMemberCardQueryCondition"
		resultMap="union">
		select
		cus.`name` as `customer_name`,
		cmd.`remaining_money` as `remaining_money`,
		cmd.`is_valid` as
		`is_valid`,
		c.`name` as `member_card_name`,
		cmd.`project_discount` as `project_discount`,
		cmd.`product_discount` as `product_discount`,
		cmd.`is_returned` as `is_returned`,
		cmd.`returned_reason` as
		`returned_reason`,
		cmd.`returned_time` as `returned_time`,
		cmd.`returned_money` as `returned_money`,
		cmd.`is_turned` as
		`is_turned`,
		cmd.`turned_reason` as `turned_reason`,
		cmd.`turned_time`
		as `turned_time`,
		cmd.`turned_money` as `turned_money`,
		cmd.`unique_identifier` as `unique_identifier`
		from
		customer_member_card cmd
		left join customer cus on
		cus.`id`=cmd.`customer_id`
		left join member_card c on
		cmd.`member_card_id`=c.`id`
		<where>
			<if test="storeId != null">
				cmd.`store_id` = #{storeId, jdbcType=BIGINT}
			</if>
			<if test="keyWords != null and keyWords != ''">
				<bind name="condition" value="'%' + keyWords + '%'" />
				`customer_name` LIKE #{condition, jdbcType=VARCHAR}
			</if>
			and
			cmd.`is_valid` = '0'
		</where>

	</select>

	<update id="returnCard" parameterType="com.zes.squad.gmh.entity.po.CustomerMemberCardPo">
		update customer_member_card
		set
		`is_valid`=0,
		`is_returned`=1,
		`returned_reason`=#{returnedReason,jdbcType=VARCHAR},
		`returned_time`=#{returnedTime,jdbcType=TIMESTAMP},
		`returned_money`=#{returnedMoney,jdbcType=DECIMAL}
		where
		`id`=#{id,jdbcType=INTEGER}
	</update>
	
	<update id="turnCard" parameterType="com.zes.squad.gmh.entity.po.CustomerMemberCardPo">
		update customer_member_card
		set
		`is_valid`=0,
		`is_turned`=1,
		`turned_reason`=#{turnedReason,jdbcType=VARCHAR},
		`turned_time`=#{turnedTime,jdbcType=TIMESTAMP},
		`turned_money`=#{turnedMoney,jdbcType=DECIMAL}
		where
		`id`=#{id,jdbcType=INTEGER}
	</update>
	
	<select id="getById" parameterType="long" resultMap="BaseResultMap">
		select * from customer_member_card
		where
		`id`=#{id,jdbcType=INTEGER}
	
	</select>
	<update id="calRemainMoney" parameterType="map">
		update customer_member_card
		set
		`remaining_money`=#{remainMoney,jdbcType=DECIMAL}
		where
		`id`=#{id,jdbcType=BIGINT}
	</update>
</mapper>