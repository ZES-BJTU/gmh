<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zes.squad.gmh.mapper.ProductMapper">
	<resultMap id="BaseResultMap" type="com.zes.squad.gmh.entity.po.ProductPo">
		<id column="id" jdbcType="BIGINT" property="id" />
		<id column="product_type_id" jdbcType="BIGINT" property="productTypeId" />
		<result column="code" jdbcType="VARCHAR" property="code" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="unit_name" jdbcType="VARCHAR" property="unitName" />
		<result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
		<result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
		<result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
	</resultMap>
	<sql id="Base_Column_List">
		`id`, `product_type_id`, `code`,
		`name`, `unit_name`, `unit_price`,
		`created_time`, `modified_time`
	</sql>
	<insert id="insert" parameterType="com.zes.squad.gmh.entity.po.ProductPo">
		<selectKey keyProperty="id" order="AFTER" resultType="long">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO product(`product_type_id`, `code`, `name`, `unit_name`, `unit_price`) 
		VALUES 
		(#{productTypeId, jdbcType=BIGINT},
		#{code, jdbcType=VARCHAR},
		#{name, jdbcType=VARCHAR},
		#{unitName, jdbcType=VARCHAR},
		#{unitPrice, jdbcType=DECIMAL})
	</insert>
	<delete id="deleteById" parameterType="long">
		DELETE FROM product WHERE `id` = #{id, jdbcType=BIGINT}
	</delete>
	<delete id="batchDelete" parameterType="long">
		DELETE FROM product WHERE `id` IN
		<foreach collection="list" item="id" separator="," open="(" close=")">
			#{id, jdbcType=BIGINT}
		</foreach>
	</delete>
	<update id="updateSelective" parameterType="com.zes.squad.gmh.entity.po.ProductPo">
		UPDATE product
		<set>
			<if test="productTypeId != null">
				`product_type_id` = #{productTypeId, jdbcType=BIGINT},
			</if>
			<if test="code != null and code != ''">
				`code` = #{code, jdbcType=VARCHAR},
			</if>
			<if test="name != null and name != ''">
				`name` = #{name, jdbcType=VARCHAR},
			</if>
			<if test="unitName != null and unitName != ''">
				`unit_name` = #{unitName, jdbcType=VARCHAR},
			</if>
			<if test="unitPrice != null">
				`unit_price` = #{unitPrice, jdbcType=DECIMAL}
			</if>
		</set>
		WHERE `id` = #{id, jdbcType=BIGINT}
	</update>
	<select id="selectById" parameterType="long" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List"/>
		FROM product
		WHERE `id` = #{id, jdbcType=BIGINT}
		LIMIT 1
	</select>
	<select id="selectByTypeId" parameterType="long" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List"/>
		FROM product
		WHERE `product_type_id` = #{productTypeId, jdbcType=BIGINT}
	</select>
	<select id="selectByCode" parameterType="string" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List"/>
		FROM product
		WHERE `code` = #{code, jdbcType=VARCHAR}
		LIMIT 1
	</select>
	<select id="selectByName" parameterType="string" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List"/>
		FROM product
		WHERE `name` = #{name, jdbcType=VARCHAR}
		LIMIT 1
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List"/>
		FROM product
	</select>
	<select id="selectStoreAll" parameterType="long" resultMap="BaseResultMap">
		SELECT
		p.`id`, 
		p.`product_type_id`, 
		p.`code`,
		p.`name`, 
		p.`unit_name`, 
		p.`unit_price`
		FROM product p
		LEFT JOIN
		product_amount pa
		ON
		p.`id` = pa.`product_id`
		<where>
			pa.`amount` > 0 AND pa.`store_id` = #{storeId:BIGINT}
		</where>
	</select>
</mapper>